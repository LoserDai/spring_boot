-----------------------------springboot整合thymeleaf--------------------------
一、thymeleaf介绍
   1、为什么要使用thymeleaf？
	jsp：
		index.jsp--->indexServlet.java---->indexServlet.class
	thymeleaf：
		静态html

   2、什么是thymeleaf？
	thymeleaf和freemarker是JAVA语言编写的模板引擎，可以基于模板和数据生成静态html页面

   3、thymeleaf启动器
	spring-boot-starter-thymeleaf
	
   4、thymeleaf的位置和后缀
	 位置：resource/templates
	 后缀：.html

二、thymeleaf语法详解
   1、变量输出
       th:value="${msg}"
   2、内置对象
        strings：
            长度：${#strings.length(msg)}
            截取：${#strings.substring(msg,6,8)}
            转大写：${#strings.toUpperCase(msg)}
            转小写：${#strings.toLowerCase(msg)}
            是否为空：${#strings.isEmpty(msg)}
        datas：
           格式化：${#dates.format(msg,'yyyy-MM-dd')}
        numbers：
           格式化：${##numbers.formatDecimal(msg,0,2)}

   3、if  for
        <tr th:each="user : ${list}">
                <td th:text="${user.id}"></td>
                <td th:text="${user.nam}"></td>
                <td th:text="${user.sex}=='1'?'女':'男'"></td>
                <td th:if="${user.sex}=='1'">女</td>
                <td th:if="${user.sex}=='0'">男</td>
        </tr>
   4、url
        格式：
            th:href="@{}"
        相对路径：
            相对于项目的根：@{/}
            相对于服务器的根：@{~/}
        参数传递：
            问号传参：<a th:href="@{/param(id=1,nam=zs)}">问号传参</a><br>
            restful传参：<a th:href="@{/param1/{id}/{nam}(id=1,nam=zs)}">restful传参</a>
   5、取作用域的值
        request：${reqMsg}
        session：${session.sesMsg}

三、restful
    1、什么是restful 风格的url？
        restful(Representational State Transfer，表现层状态转移)：URL定位资源时，用HTTP动词（GET,POST,DELETE,PUT）描述操作，
            例如：
                在Restful之前的操作：
                    http://127.0.0.1/user/query?id=1   根据用户id查询用户数据
                    http://127.0.0.1/user/save  新增用户
                    http://127.0.0.1/user/update?id=1  修改用户信息
                    http://127.0.0.1/user/delete?id=1  删除用户信息
                RESTful用法：
                    http://127.0.0.1/user/1  get    根据用户id查询用户数据
                    http://127.0.0.1/user    post   新增用户
                    http://127.0.0.1/user/1  put    修改用户信息
                    http://127.0.0.1/user/1  delete 删除用户信息
            总结：1、去掉动词 2、参数拼到url里

    2、什么是restful风格的url传参
        发送请求：
            <a href="/user/1/zs">restful 传参</a>
        接收参数：
            @RequestMapping("/user/{id}/{nam}")
            @ResponseBody
            public String restful(@PathVariable Integer id,@PathVariable String nam){
                System.out.println("接收restful url的参数："+id+"---------"+nam);
                return id+"---------"+nam;
            }
